
--전화번호 관리 프로그램

--이름, 전화번호, 생일, 이메일
--전공, 학년
--부서명, 직급
--동호회이름, 닉네임
--대리키 : 일련번호 -> member_idx, pIdx ==> 기본키로 만들기 위한 목적

--전화번호부(Contact)
drop table contact;

create table contact(
    pIdx number(6),
    category varchar2(10) not null,
    name varchar2(20) not null,
    phone_num number(20) not null,
    address varchar2(20) default 'SEOUL' not null,
    email varchar2(20) default '@naver.com' not null,
    
    major varchar2(10),
    grade number(2),
    company varchar2(10),
    dept varchar2(10),
    job varchar2(10),
    cafename varchar2(10),
    nickname varchar2(10),
    
    constraint contact_pIdx_PK primary key(pIdx),
    constraint contact_category_CK check (category in ('UNIV','COM','CAFE')),
    constraint contact_phone_num_UK unique(phone_num)
);

select * from contact;

drop table phoneInfo_basic;
drop table phoneInfo_univ;
drop table phoneInfo_com;

create table phoneInfo_basic (
    idx number(6),
    fr_name varchar2(20) not null,
    fr_phonenumber varchar2(20) not null,
    fr_email varchar2(20),
    fr_address VARCHAR2(20),
    fr_regdate date default sysdate,    
    constraint pb_idx_PK primary key(idx),
    constraint pb_fr_phonenumber_UK unique(fr_phonenumber)
);


create table phoneInfo_univ (
    idx number(6),
    fr_u_major varchar2(20) default 'N' not null,
    fr_u_year number(1) default 1 not null,
    fr_ref number(6),
    constraint pu_idx_PK primary key(idx),
    constraint pu_fr_u_year_CK check (fr_u_year>0 and fr_u_year<5),
    constraint pu_fr_ref_FK foreign key(fr_ref) REFERENCES phoneInfo_basic(idx)    --외래키로는 부모테이블의 PK만 들어갈 수 있음.
);

create table phoneInfo_com(
    idx number(6),
    fr_c_company varchar2(20) default 'N' not null,
    fr_ref number(6),
    constraint pc_idx_PK primary key(idx),
    constraint pc_fr_ref_FK foreign key(fr_ref) REFERENCES phoneInfo_basic(idx)  
);

select * from phoneinfo_basic;
select * from phoneinfo_univ;
select * from phoneinfo_com;
